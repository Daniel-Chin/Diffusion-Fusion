import os
from os import path

import torch

HAS_CUDA = torch.cuda.is_available()
CUDA = torch.device("cuda:0")
CPU  = torch.device("cpu")
if HAS_CUDA:
    DEVICE = CUDA
    DEVICE_STR = 'cuda'
    print('We have CUDA.')
    # gpu_name = torch.cuda.get_device_name(
    #     torch.cuda.current_device(), 
    # )
    # with open('gpu_name.txt', 'w') as f:
    #     print(gpu_name, file=f)
else:
    DEVICE = CPU
    DEVICE_STR = 'cpu'
    print("We DON'T have CUDA.")

if __name__ == '__main__':
    SHARED_ROOT = 'shared_root.py'
    EXCLUDE = ['.git', '__pycache__']

    def main():
        assert path.basename(__file__) == SHARED_ROOT
        with open(__file__, 'r') as f:
            data = f.read()
        propagate(data)
        print('ok')

    def propagate(data, depth=0, display='.'):
        with open('shared.py', 'w') as f:
            print('# Auto generated by', __file__, file=f)
            print(file=f)
            f.write(data)
        print(' ' * depth, display, sep='')
        for name in os.listdir():
            if path.isdir(name) and name not in EXCLUDE:
                os.chdir(name)
                propagate(data, depth + 1, name)
                os.chdir('..')

    main()
